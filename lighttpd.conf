server.modules = (
 	"mod_proxy",
	"mod_openssl"
)

server.document-root        = "/var/www/html"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.port                 = 443

ssl.engine = "enable"
ssl.pemfile = "/etc/letsencrypt/live/<domain>/fullchain.pem"
ssl.privkey = "/etc/letsencrypt/live/<domain>/privkey.pem"

# strict parsing and normalization of URL for consistency and security
# https://redmine.lighttpd.net/projects/lighttpd/wiki/Server_http-parseoptsDetails
# (might need to explicitly set "url-path-2f-decode" = "disable"
#  if a specific application is encoding URLs inside url-path)
server.http-parseopts = (
  "header-strict"           => "disable",# default
  "host-strict"             => "disable",# default
  "host-normalize"          => "disable",# default
  "url-normalize-unreserved"=> "disable",# recommended highly
  "url-normalize-required"  => "disable",# recommended
  "url-ctrls-reject"        => "disable",# recommended
  "url-path-2f-decode"      => "disable",# recommended highly (unless breaks app)
 #"url-path-2f-reject"      => "disable",
  "url-path-dotseg-remove"  => "disable",# recommended highly (unless breaks app)
 #"url-path-dotseg-reject"  => "disable",
 #"url-query-20-plus"       => "disable",# consistency in query string
)

index-file.names            = ( "index.php", "index.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

include "/etc/lighttpd/conf-enabled/*.conf"

$SERVER["socket"] == ":443" {
	ssl.engine = "enable"
	ssl.pemfile = "/etc/letsencrypt/live/<domain>/fullchain.pem"
	ssl.privkey = "/etc/letsencrypt/live/<domain>/privkey.pem"
	proxy.server = ( "" => (("host" => "127.0.0.1", "port" => 8008)))
    proxy.forwarded = ( "for" => 1, "proto" => 1 )
}

$SERVER["socket"] == ":8448" {
	ssl.engine = "enable"
	ssl.pemfile = "/etc/letsencrypt/live/<domain>/fullchain.pem"
	ssl.privkey = "/etc/letsencrypt/live/<domain>/privkey.pem"
	proxy.server = ( "" => (("host" => "127.0.0.1", "port" => 8008)))
    proxy.forwarded = ( "for" => 1, "proto" => 1 )
}
